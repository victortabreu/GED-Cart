/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package documentos;

import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Victor
 */
public class MostraDrive extends javax.swing.JDialog {

    /**
     * Creates new form MostraDrive
     *
     * @param parent
     * @param modal
     */
    public MostraDrive(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tabelaUpload.getTableHeader().setDefaultRenderer(new principal.EstiloTabelaHeader());
        tabelaUpload.setDefaultRenderer(Object.class, new principal.EstiloTabelaRenderer());
        tabelaUpload.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }

    public int confere = 0;

    public final void barra() {
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        confere = 0;
        progresso.setValue(0);
        Thread hi = new Thread(() -> {
            while (progresso.getValue() < 100 && confere == 0) {
                try {
                    TimeUnit.MILLISECONDS.sleep(100);
                    progresso.setValue(progresso.getValue() + 2);
                    if (progresso.getValue() == 100) {
                        progresso.setValue(0);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(BarraDeProgresso.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (confere == 1) {
                    progresso.setValue(100);
                    dados.setText("CONSULTA AO DRIVE FINALIZADA");
                    cancelar.setText("Sair");
                    setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                }
            }
        });
        hi.start();
    }

    void mensagem() {
        int a = 0;
        for (int i = 0; i < tabelaUpload.getRowCount(); i++) {
            String c = tabelaUpload.getValueAt(i, 0).toString();
            if (c.contains("EXISTE")) {
                a = 1;
                break;
            }
            if (c.contains("ENCONTRADO") || c.equals("") || c.contains("POSSÍVEL")) {
                a = 2;
                break;
            }
            if (c.contains("EXCLUÍDO")) {
                a = 3;
                break;
            }
        }

        switch (a) {
            case 1:
                JOptionPane.showMessageDialog(this, "Algumas imagens não foram encontradoas na pasta do sistema.\nVocê pode tentar atualizar as imagens do documeto.", "Upload", 0,
                        new ImageIcon(getClass().getResource("/imagens/usuarios/info.png")));
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Não foi possível fazer o upload.\nVocê pode tentar atualizar a pasta de upload.", "Upload", 0,
                        new ImageIcon(getClass().getResource("/imagens/usuarios/info.png")));
                break;
            case 3:
                JOptionPane.showMessageDialog(this, "Os arquivos foram excluídos do Drive.", "Upload", 0,
                        new ImageIcon(getClass().getResource("/imagens/usuarios/info.png")));
                break;
            default:
                JOptionPane.showMessageDialog(this, "Todos os arquivps foram enviados para o Drive.", "Upload", 0,
                        new ImageIcon(getClass().getResource("/imagens/usuarios/info.png")));
                break;
        }
        FrmDocumentos.finaliza = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        tipo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUpload = new javax.swing.JTable();
        progresso = new javax.swing.JProgressBar();
        cancelar = new javax.swing.JButton();
        dados = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 330));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "UPLOAD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tipo.setText("TIPO");
        jPanel4.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        tabelaUpload.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RESULTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaUpload);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 430, 180));
        jPanel4.add(progresso, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 430, -1));

        cancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/458594.png"))); // NOI18N
        cancelar.setText("Cancelar Operação");
        cancelar.setBorder(null);
        cancelar.setBorderPainted(false);
        cancelar.setContentAreaFilled(false);
        cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produtos/apagarT1 - Copia.png"))); // NOI18N
        cancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel4.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, -1, -1));

        dados.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        dados.setText("DADOS");
        jPanel4.add(dados, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        if (confere == 0) {
            confere = 1;
            FrmDocumentos.finaliza = 1;
            JOptionPane.showMessageDialog(this, "A operação foi cancelada!\nAlguns arquivos podem não ter sido enviados para o Drive.\nVocê pode tentar enviar depois fazendo o upload individual ou atualizando as imagens.", "Upload", 0,
                    new ImageIcon(getClass().getResource("/imagens/usuarios/info.png")));
        }
        dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    public static javax.swing.JLabel dados;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JProgressBar progresso;
    public javax.swing.JTable tabelaUpload;
    public javax.swing.JLabel tipo;
    // End of variables declaration//GEN-END:variables
}
